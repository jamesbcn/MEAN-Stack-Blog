{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.html","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/blog/blog-edit/blog-edit.component.html","./src/app/components/blog/blog-edit/blog-edit.component.scss","./src/app/components/blog/blog-edit/blog-edit.component.ts","./src/app/components/blog/blog.component.html","./src/app/components/blog/blog.component.scss","./src/app/components/blog/blog.component.ts","./src/app/components/blog/delete-blog/delete-blog.component.html","./src/app/components/blog/delete-blog/delete-blog.component.scss","./src/app/components/blog/delete-blog/delete-blog.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/dashboard/dashboard.component.scss","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/home/home.component.html","./src/app/components/home/home.component.scss","./src/app/components/home/home.component.ts","./src/app/components/login/login.component.html","./src/app/components/login/login.component.scss","./src/app/components/login/login.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/navbar/navbar.component.scss","./src/app/components/navbar/navbar.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/profile/profile.component.scss","./src/app/components/profile/profile.component.ts","./src/app/components/public-profile/public-profile.component.html","./src/app/components/public-profile/public-profile.component.scss","./src/app/components/public-profile/public-profile.component.ts","./src/app/components/register/register.component.html","./src/app/components/register/register.component.scss","./src/app/components/register/register.component.ts","./src/app/routes.ts","./src/app/services/auth-guard.service.ts","./src/app/services/auth.service.ts","./src/app/services/blog.service.ts","./src/app/services/not-auth-guard.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<app-navbar></app-navbar>\\n\\n<div class=\\\"container\\\">\\n    <div class=\\\"flash\\\">\\n        <flash-messages></flash-messages>\\n    </div>\\n    <router-outlet></router-outlet>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","module.exports = \".flash {\\n  margin-top: 15px; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.scss\n// module id = ./src/app/app.component.scss\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\n\nimport { routes } from './routes';\n\nimport { AppComponent } from './app.component';\nimport { BlogComponent } from './components/blog/blog.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { RegisterComponent } from './components/register/register.component';\n\nimport { AuthGuard } from './services/auth-guard.service';\nimport { NotAuthGuard } from './services/not-auth-guard.service';\nimport { AuthService } from './services/auth.service';\nimport { BlogService } from './services/blog.service';\nimport { BlogEditComponent } from './components/blog/blog-edit/blog-edit.component';\nimport { DeleteBlogComponent } from './components/blog/delete-blog/delete-blog.component';\nimport { PublicProfileComponent } from './components/public-profile/public-profile.component';\nexport function tokenGetter() {\n  return localStorage.getItem('access_token');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent,\n    BlogComponent,\n    RegisterComponent,\n    LoginComponent,\n    BlogEditComponent,\n    DeleteBlogComponent,\n    PublicProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    FlashMessagesModule.forRoot(),\n    FormsModule,\n    HttpModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [\n    AuthService,\n    AuthGuard,\n    BlogService,\n    NotAuthGuard\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"<div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-2\\\"></div>\\n    <div class=\\\"col-md-8\\\">\\n\\n      <h2>Edit Post</h2>\\n\\n      <hr>\\n\\n      <div class=\\\"flash-message\\\" *ngIf=\\\"message\\\">\\n        <div [ngClass]=\\\"messageClass\\\">\\n          {{ message }}\\n        </div>\\n      </div>\\n\\n      <form (submit)=\\\"updateBlogSubmit()\\\" *ngIf=\\\"!loading\\\">\\n        <!-- Title Field -->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"title\\\">Title</label>\\n          <!-- Title Input -->\\n          <input [disabled]=\\\"processing\\\" type=\\\"text\\\" name=\\\"title\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"post.title\\\"\\n            #title=\\\"ngModel\\\" />\\n        </div>\\n\\n        <!-- Body Field -->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"body\\\">Body</label>\\n          <!-- Body Input -->\\n          <textarea [disabled]=\\\"processing\\\" name=\\\"body\\\" rows=\\\"6\\\" cols=\\\"30\\\" [(ngModel)]=\\\"post.body\\\" #body=\\\"ngModel\\\" class=\\\"form-control\\\"></textarea>\\n        </div>\\n\\n        <!-- Delete Button -->\\n          <button [disabled]=\\\"processing\\\" [routerLink]=\\\"['/delete-blog/', post._id]\\\" name=\\\"button\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n\\n        <!-- Go Back Button -->\\n        <button [disabled]=\\\"processing\\\" type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"goBack()\\\">Go Back</button>\\n        <!-- Save Changes Button -->\\n        <button [disabled]=\\\"processing || (!title.dirty && !body.dirty)\\\" type=\\\"submit\\\" name=\\\"save\\\" class=\\\"btn btn-info\\\">Save Changes</button>\\n\\n      </form>\\n    </div>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/blog/blog-edit/blog-edit.component.html\n// module id = ./src/app/components/blog/blog-edit/blog-edit.component.html\n// module chunks = main","module.exports = \"h2 {\\n  padding-top: 2rem;\\n  text-align: right; }\\n\\n.form-control {\\n  background-color: whitesmoke;\\n  border: 2px dashed darkgrey; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/blog/blog-edit/blog-edit.component.scss\n// module id = ./src/app/components/blog/blog-edit/blog-edit.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router'; // Activated Route used to allow ng to grab URL\nimport { BlogService } from '../../../services/blog.service';\n\n@Component({\n  selector: 'app-blog-edit',\n  templateUrl: './blog-edit.component.html',\n  styleUrls: ['./blog-edit.component.scss']\n})\nexport class BlogEditComponent implements OnInit {\n\n  message: string;\n  messageClass: string;\n  post;\n  processing: boolean = false;\n  currentUrl;\n  loading: boolean = true;\n\n  constructor(\n    private location: Location,\n    private activatedRoute: ActivatedRoute,\n    private blogService: BlogService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.currentUrl = this.activatedRoute.snapshot.params;\n    this.blogService.getSingleBlog(this.currentUrl.id).subscribe(data => {\n      if (!data.success) {\n        this.messageClass = 'alert alert-danger';\n        this.message = data.message;\n        setTimeout(() => {\n          this.router.navigate(['/blog']);\n        }, 2000);\n      } else {\n          this.post = data.post;\n          this.loading = false;\n      }\n    });\n  }\n\n  updateBlogSubmit() {\n    this.processing = true;\n    this.blogService.editBlog(this.post).subscribe(data => {\n      if (!data.success) {\n        this.messageClass = 'alert alert-danger';\n        this.message = data.message.message.slice(30);\n        this.processing = false;\n      } else {\n          this.messageClass = 'alert alert-success';\n          this.message = data.message;\n          setTimeout(() => {\n            this.router.navigate(['/blog']);\n          }, 2000);\n        }\n    });\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/blog/blog-edit/blog-edit.component.ts","module.exports = \"<div class=\\\"row\\\">\\n  <br />\\n  <div class=\\\"col-md-8 offset-md-2\\\">\\n    <div class=\\\"buttons\\\" style=\\\"text-align: right\\\">\\n      <button class=\\\"btn bg-dark btn-sm text-white post\\\" *ngIf=\\\"!newPost\\\" (click)=\\\"newBlogForm()\\\">New Post</button>\\n      <button class=\\\"btn bg-secondary btn-sm text-white refresh\\\" *ngIf=\\\"!newPost\\\" [disabled]=\\\"loadingBlogs\\\" (click)=\\\"reloadBlogs()\\\">\\n        <i class=\\\"material-icons refresh-icon\\\">refresh</i>\\n      </button>\\n    </div>\\n\\n    <!-- New blog form -->\\n    <form [formGroup]=\\\"form\\\" name=\\\"blogForm\\\" (submit)=\\\"onBlogSubmit()\\\" *ngIf=\\\"newPost\\\">\\n      <h2>New Post</h2>\\n\\n      <hr>\\n\\n      <div class=\\\"flash-message\\\" *ngIf=\\\"message && newPost\\\">\\n        <div [ngClass]=\\\"messageClass\\\">\\n          {{ message }}\\n        </div>\\n      </div>\\n\\n      <!-- Title Input -->\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"title\\\">Title</label>\\n        <div [ngClass]=\\\"{'has-success': form.controls.title.valid, 'has-error': form.controls.title.dirty && form.controls.title.errors}\\\">\\n          <!-- Title Input -->\\n          <input type=\\\"text\\\" name=\\\"title\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" formControlName=\\\"title\\\" />\\n          <!-- Validation -->\\n          <ul class=\\\"help-block\\\">\\n            <li *ngIf=\\\"form.controls.title.dirty && form.controls.title.errors?.required\\\">This field is required.</li>\\n            <li *ngIf=\\\"(form.controls.title.dirty && form.controls.title.errors?.minlength) || (form.controls.title.dirty && form.controls.title.errors?.maxlength)\\\">Max length: 50, Min length: 5</li>\\n            <li *ngIf=\\\"form.controls.title.dirty && form.controls.title.errors?.alphaNumericValidation\\\">Must be a letter or number</li>\\n          </ul>\\n        </div>\\n      </div>\\n\\n      <!-- Body Input -->\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"body\\\">Body</label>\\n        <div [ngClass]=\\\"{'has-success': form.controls.body.valid, 'has-error': form.controls.body.dirty && form.controls.body.errors}\\\">\\n          <!-- Body Input -->\\n          <textarea name=\\\"body\\\" rows=\\\"6\\\" cols=\\\"30\\\" class=\\\"form-control\\\" formControlName=\\\"body\\\"></textarea>\\n          <!-- Validation -->\\n          <ul class=\\\"help-block\\\">\\n            <li *ngIf=\\\"form.controls.body.dirty && form.controls.body.errors?.required\\\">This field is required.</li>\\n            <li *ngIf=\\\"(form.controls.body.dirty && form.controls.body.errors?.minlength) || (form.controls.body.dirty && form.controls.body.errors?.maxlength)\\\">Max length: 500, Min length: 5</li>\\n          </ul>\\n        </div>\\n      </div>\\n\\n      <button [disabled]=\\\"processing\\\" type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"goBack()\\\" class=\\\"btn btn-warning\\\">Go Back</button>\\n      <button [disabled]=\\\"processing || !form.valid\\\" type=\\\"submit\\\" name=\\\"button\\\" class=\\\"btn btn-success\\\">Submit</button>\\n\\n    </form>\\n    <!-- End New blog form -->\\n\\n    <!-- *ngFor of Blog posts -->\\n    <div *ngIf=\\\"!newPost\\\">\\n      <div class=\\\"card\\\" *ngFor=\\\"let i of blogPosts\\\">\\n        <div class=\\\"card-header\\\">\\n          <h4 class=\\\"card-title\\\">{{ i.title }}</h4>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          {{ i.body }}\\n        </div>\\n        <div class=\\\"card-footer text-muted\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-4\\\">\\n              <strong>Posted by: </strong><a [routerLink]=\\\"['/user/', i.createdBy]\\\">{{i.createdBy}}</a>\\n              <br>\\n              <strong>Date: </strong>{{ i.createdAt | date:'dd MMM, yyyy'}}\\n            </div>\\n            <div class=\\\"thumbs\\\">\\n              <!-- Likes dropdown -->\\n              <div class=\\\"dropdown\\\">\\n                <button class=\\\"btn btn-success btn-sm text-white liked\\\" [disabled]=\\\"i.likedBy.indexOf(username) > -1\\\" *ngIf=\\\"!newPost && username !== i.createdBy\\\"\\n                  (click)=\\\"likeBlog(i._id)\\\">\\n                  <i class=\\\"material-icons thumb-icons\\\">thumb_up</i>\\n                </button>\\n                <div class=\\\"dropdown-content\\\">\\n                  <a *ngFor=\\\"let liker of i.likedBy\\\" [routerLink]=\\\"['/user/', liker]\\\">{{ liker }}</a>\\n                </div>\\n              </div>\\n              <!-- Likes dropdown end -->\\n              <strong>Likes: </strong>{{i.likes}}\\n            </div>\\n            <div class=\\\"thumbs\\\">\\n              <!-- Dislikes dropdown -->\\n              <div class=\\\"dropdown\\\">\\n                <button class=\\\"btn btn-warning btn-sm text-white disliked\\\" [disabled]=\\\"i.dislikedBy.indexOf(username) > -1\\\" *ngIf=\\\"!newPost && username !== i.createdBy\\\"\\n                  (click)=\\\"dislikeBlog(i._id)\\\">\\n                  <i class=\\\"material-icons thumb-icons\\\">thumb_down</i>\\n                </button>\\n                <div class=\\\"dropdown-content\\\">\\n                  <a *ngFor=\\\"let disliker of i.dislikedBy\\\" [routerLink]=\\\"['/user/', disliker]\\\">{{ disliker }}</a>\\n                </div>\\n              </div>\\n              <!-- Disikes dropdown end -->\\n              <strong>Dislikes: </strong>{{i.dislikes}}\\n            </div>\\n            <div class=\\\"edit-del\\\">\\n              <button [routerLink]=\\\"['/edit-blog/', i._id]\\\" class=\\\"btn btn-info btn-sm text-white\\\" *ngIf=\\\"!newPost && username === i.createdBy\\\">Edit</button>\\n              <button [routerLink]=\\\"['/delete-blog/', i._id]\\\" class=\\\"btn btn-danger btn-sm text-white\\\" *ngIf=\\\"!newPost && username === i.createdBy\\\">Delete</button>\\n            </div>\\n          </div>\\n        </div>\\n        <!-- footer end -->\\n\\n        <!-- post comment box - start -->\\n        <ul class=\\\"list-group\\\">\\n          <li class=\\\"list-group-item post-comment\\\">\\n            <button class=\\\"btn btn-dark btn-sm text-white\\\" [disabled]=\\\"newComment.indexOf(i._id) > -1\\\" (click)=\\\"draftComment(i._id)\\\">Post Comment</button>\\n            <br/>\\n            <div *ngIf=\\\"newComment.indexOf(i._id) > -1\\\">\\n              <form [formGroup]=\\\"commentForm\\\">\\n                <textarea name=\\\"comment\\\" class=\\\"form-control comment-area\\\" formControlName=\\\"comment\\\" rows=\\\"3\\\" cols=\\\"30\\\"></textarea>\\n                \\n                <div>\\n                  <ul class=\\\"help-block\\\">\\n                    <li *ngIf=\\\"commentForm.controls.comment.errors?.required && commentForm.controls.comment.dirty\\\">\\n                      This field is required.\\n                    </li>\\n                    <li *ngIf=\\\"(commentForm.controls.comment.errors?.maxlength && commentForm.controls.comment.dirty) || \\n                        (commentForm.controls.comment.errors?.minlength && commentForm.controls.comment.dirty)\\\">\\n                        Comment must be no more than 200 characters.\\n                    </li>\\n                  </ul>\\n                </div>\\n                <button [disabled]=\\\"!commentForm.valid || processing\\\" class=\\\"btn bg-secondary btn-sm text-white\\\" (click)=\\\"postComment(i._id)\\\">Submit</button>\\n                <button [disabled]=\\\"processing\\\" class=\\\"btn bg-danger btn-sm text-white\\\" (click)=\\\"cancelSubmission(i._id)\\\">Cancel</button>\\n              </form>\\n            </div>\\n            <ul class=\\\"comments-container\\\">\\n                <!-- Show Comments -->\\n                <li *ngIf=\\\"enabledComments.indexOf(i._id) === -1 && i.comments.length > 0\\\" class=\\\"list-group-item show-hide\\\">\\n                    <span (click)=\\\"expand(i._id)\\\">\\n                        <i class=\\\"material-icons comment\\\">comment</i>&nbsp;&nbsp;Show comments\\n                    </span>\\n                </li>\\n\\n                <!-- Hide Comments -->\\n                <li *ngIf=\\\"enabledComments.indexOf(i._id) > -1\\\" class=\\\"list-group-item show-hide\\\">\\n                    <span (click)=\\\"collapse(i._id)\\\">\\n                      <i class=\\\"material-icons comment\\\">comment</i>&nbsp;&nbsp;Hide comments\\n                    </span>\\n                </li>\\n\\n                <!-- Comment -->\\n                <div *ngIf=\\\"enabledComments.indexOf(i._id) > -1\\\">\\n                  <!-- *ngFor loop for all the comments - start -->\\n                  <li *ngFor=\\\"let comment of i.comments\\\" class=\\\"list-group-item listed-comments\\\">\\n                    <strong>{{ comment.commentator }}:</strong> {{comment.comment}}\\n                  </li>\\n                  <!-- *ngFor loop for all the comments - end -->\\n                </div>\\n            </ul>\\n          </li>\\n        </ul>\\n      </div>\\n      <!-- post comment box - end -->\\n    </div>\\n    <!-- Blog post end -->\\n\\n  </div>\\n  <!-- col-md-8 -->\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/blog/blog.component.html\n// module id = ./src/app/components/blog/blog.component.html\n// module chunks = main","module.exports = \"::ng-deep .flash-message {\\n  text-align: center; }\\n\\n.post {\\n  height: 31px;\\n  font-family: 'Oswald', sans-serif;\\n  font-size: 14px;\\n  padding: .2rem .5rem .2rem .5rem; }\\n\\n.refresh {\\n  height: 31px;\\n  width: 35px;\\n  padding: .25rem .2rem; }\\n\\n.refresh-icon {\\n  font-size: 22px; }\\n\\n.liked, .disliked {\\n  height: 23.25px;\\n  width: 26.25px;\\n  padding: .185rem .15rem; }\\n\\n.thumb-icons {\\n  font-size: 16.5px; }\\n\\nh4 {\\n  margin-bottom: 0; }\\n\\n.card {\\n  margin: 10px 0; }\\n\\n.card-title {\\n  margin-bottom: 0.25rem; }\\n\\n.card-footer {\\n  font-size: 0.85rem; }\\n\\n.thumbs {\\n  padding-top: 10px;\\n  padding-right: 7.5px; }\\n\\n.row {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex; }\\n\\n.edit-del {\\n  -webkit-box-flex: 1;\\n      -ms-flex-positive: 1;\\n          flex-grow: 1;\\n  text-align: right;\\n  padding-right: 0.5rem;\\n  padding-top: 6px; }\\n\\n.post-comment {\\n  text-align: right;\\n  padding: .5rem; }\\n\\n.show-hide {\\n  text-align: left;\\n  font-size: 0.85rem;\\n  color: #6c757d;\\n  font-weight: bold;\\n  padding: 0.75rem;\\n  margin-top: 8px; }\\n\\n.comments-container {\\n  padding-left: 0px; }\\n\\n.comment-area {\\n  margin: 8px 0px !important; }\\n\\n.listed-comments {\\n  text-align: left; }\\n\\n/* Dropdown Button */\\n\\n.dropbtn {\\n  background-color: #4CAF50;\\n  color: white;\\n  padding: 16px;\\n  font-size: 16px;\\n  border: none;\\n  cursor: pointer; }\\n\\n.dropdown {\\n  position: relative;\\n  display: inline-block; }\\n\\n.dropdown-content {\\n  display: none;\\n  position: absolute;\\n  background-color: #f9f9f9;\\n  min-width: 160px;\\n  -webkit-box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\\n          box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\\n  z-index: 1; }\\n\\n/* Links inside the dropdown */\\n\\n.dropdown-content a {\\n  color: black;\\n  padding: 12px 16px;\\n  text-decoration: none;\\n  display: block; }\\n\\n/* Change color of dropdown links on hover */\\n\\n.dropdown-content a:hover {\\n  background-color: #f1f1f1; }\\n\\n/* Show the dropdown menu on hover */\\n\\n.dropdown:hover .dropdown-content {\\n  display: block; }\\n\\n/* Change the background color of the dropdown button when the dropdown content is shown */\\n\\n.dropdown:hover .dropbtn {\\n  background-color: #3e8e41; }\\n\\n/* New Post Alerts */\\n\\n.help-block {\\n  color: red;\\n  font-style: italic;\\n  list-style-type: none; }\\n\\n/* New Post Form   */\\n\\nh2 {\\n  padding-top: 2rem;\\n  text-align: right; }\\n\\nlabel {\\n  margin-left: .5rem;\\n  margin-bottom: .2rem; }\\n\\n.form-control {\\n  background-color: whitesmoke;\\n  border: 2px dashed darkgrey; }\\n\\n.comment {\\n  font-size: 1rem; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/blog/blog.component.scss\n// module id = ./src/app/components/blog/blog.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\n\nimport { AuthService } from '../../services/auth.service';\nimport { BlogService } from '../../services/blog.service';\n\n@Component({\n  selector: 'app-blog',\n  templateUrl: './blog.component.html',\n  styleUrls: ['./blog.component.scss']\n})\nexport class BlogComponent implements OnInit {\n\n  message: string;\n  messageClass: string;\n  newPost: boolean = false;\n  username: string;\n  loadingBlogs: boolean = false;\n  form;\n  commentForm;\n  processing: boolean = false;\n  blogPosts; // Array of blogs from blogService.getAllBlogs() to be iterated through\n  newComment = [];\n  enabledComments = [];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private blogService: BlogService\n  ) {\n    this.createNewBlogForm(); // Create new blog form on start up\n    this.createCommentForm(); // Create form for posting comments on a user's blog post\n  }\n\n  ngOnInit() {\n    // Get profile username on page load\n    this.authService.getProfile().subscribe(profile => {\n      this.username = profile.user.username; // Used when creating new blog posts and comments\n\n      this.getAllBlogs();\n\n    });\n  }\n\n  createNewBlogForm() {\n    this.form = this.formBuilder.group({\n      title: ['', Validators.compose([\n        Validators.required,\n        Validators.maxLength(50),\n        Validators.minLength(5),\n        this.alphaNumericValidation\n      ])],\n      body: ['', Validators.compose([\n        Validators.required,\n        Validators.maxLength(500),\n        Validators.minLength(5)\n      ])]\n    });\n  }\n\n  enableFormNewBlogForm() {\n    this.form.get('title').enable();\n    this.form.get('body').enable();\n  }\n\n  disableFormNewBlogForm() {\n    this.form.get('title').disable();\n    this.form.get('body').disable();\n  }\n\n  createCommentForm() {\n    this.commentForm = this.formBuilder.group({\n      comment: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(200)\n      ])]\n    });\n  }\n\n  enableCommentForm() {\n    this.commentForm.get('comment').enable();\n  }\n\n  disableCommentForm() {\n    this.commentForm.get('comment').disable();\n  }\n\n  onBlogSubmit() {\n    this.processing = true; // Disable submit button\n    this.disableFormNewBlogForm(); // Lock form\n    // Create blog object from the inputs\n    const blog = {\n      title: this.form.get('title').value, // taken from the form inputs\n      body: this.form.get('body').value,  // taken from the form inputs\n      createdBy: this.username  // taken from the auth service (see ngOnInit)\n    };\n\n    this.blogService.newBlog(blog).subscribe(data => {\n      if (!data.success) {\n        this.messageClass = 'alert alert-danger';\n        this.message = data.message;\n        this.processing = false;\n        this.enableFormNewBlogForm();\n      } else {\n        this.messageClass = 'alert alert-success';\n        this.message = data.message;\n        this.getAllBlogs(); // So any time a new blog post is posted it's going to display all\n        // Clear all data after 2 seconds...\n        setTimeout(() => {\n          this.newPost = false;\n          this.processing = false;\n          this.message = '';\n          this.form.reset();\n          this.enableFormNewBlogForm();\n        }, 2000);\n      }\n    });\n  }\n\n  // Validation for blog post title\n  alphaNumericValidation(controls) {\n    const regExp = new RegExp(/^[a-zA-Z0-9 ]+$/);\n    // Check if test returns false or true\n    if (regExp.test(controls.value)) {\n      return null; // Return valid\n    } else {\n      return { 'alphaNumericValidation': true };\n    }\n  }\n\n  newBlogForm() {\n    this.newPost = true;\n  }\n\n  reloadBlogs() {\n    this.loadingBlogs = true; // Locks button to stop user hammering server\n    this.getAllBlogs(); // Add any new blog posts to the page\n\n    setTimeout(() => {\n      this.loadingBlogs = false; // Release button lock after four seconds\n    }, 4000);\n  }\n\n  getAllBlogs() {\n    // Function to GET all blogs from database\n    this.blogService.getAllBlogs().subscribe(data => {\n      this.blogPosts = data.blogs; // Assign array to use in HTML\n    });\n  }\n\n  // Function to like a blog post\n  likeBlog(id) {\n    // Service to like a blog post\n    this.blogService.likeBlog(id).subscribe(data => {\n      this.getAllBlogs(); // Refresh blogs after like\n    });\n  }\n\n  // Function to disliked a blog post\n  dislikeBlog(id) {\n    // Service to dislike a blog post\n    this.blogService.dislikeBlog(id).subscribe(data => {\n      this.getAllBlogs(); // Refresh blogs after dislike\n    });\n  }\n\n  // Function to post a new comment\n  postComment(id) {\n    this.disableCommentForm(); // Disable form while saving comment to database\n    this.processing = true; // Lock buttons while saving comment to database\n    const comment = this.commentForm.get('comment').value; // Get the comment value to pass to service function\n    // Function to save the comment to the database\n    this.blogService.postComment(id, comment).subscribe(data => {\n      this.getAllBlogs(); // Refresh all blogs to reflect the new comment\n      const index = this.newComment.indexOf(id); // Get the index of the blog id to remove from array\n      this.newComment.splice(index, 1); // Remove id from the array\n      this.enableCommentForm(); // Re-enable the form\n      this.commentForm.reset(); // Reset the comment form\n      this.processing = false; // Unlock buttons on comment form\n      if (this.enabledComments.indexOf(id) < 0) {\n        this.expand(id);\n      } // Expand comments for user on comment submission\n    });\n  }\n\n  draftComment(id) {\n    this.commentForm.reset();\n    this.newComment = [];\n    this.newComment.push(id);\n  }\n\n  // Function to cancel new post transaction\n  cancelSubmission(id) {\n    const index = this.newComment.indexOf(id); // Check the index of the blog post in the array\n    this.newComment.splice(index, 1); // Remove the id from the array to cancel post submission\n    this.commentForm.reset(); // Reset  the form after cancellation\n    this.enableCommentForm(); // Enable the form after cancellation\n    this.processing = false; // Enable any buttons that were locked\n  }\n\n  // Expand the list of comments\n  expand(id) {\n    this.enabledComments.push(id); // Add the current blog post id to array\n  }\n\n  // Collapse the list of comments\n  collapse(id) {\n    const index = this.enabledComments.indexOf(id); // Get position of id in array\n    this.enabledComments.splice(index, 1); // Remove id from array\n  }\n\n  goBack() {\n    window.location.reload();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/blog/blog.component.ts","module.exports = \"<div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-2\\\"></div>\\n    <div class=\\\"col-md-8\\\">\\n\\n      <h2>Delete Post</h2>\\n\\n      <hr>\\n\\n      <!-- Custom Success/Error Message -->\\n      <div class=\\\"flash-message\\\">\\n          <div *ngIf=\\\"message\\\">\\n              <div [ngClass]=\\\"messageClass\\\">\\n                {{ message }}\\n              </div>\\n          </div>\\n      </div>\\n\\n      <!-- Modal Confirmation Window -->\\n      <div *ngIf=\\\"foundBlogPost\\\">\\n        <!-- Model Outer Layer -->\\n        <div class=\\\"modal-content\\\">\\n          <!-- Modal Header -->\\n          <div class=\\\"modal-header\\\">\\n            <!-- Modal Title -->\\n            <h4 class=\\\"modal-title\\\">Confirm</h4>\\n          </div>\\n\\n          <!-- Modal Body -->\\n          <div class=\\\"modal-body\\\">\\n            <p>Are you sure you would like to delete this post?</p>\\n          </div>\\n\\n          <!-- Modal Footer -->\\n          <div class=\\\"modal-footer\\\">\\n            <!-- Yes Button -->\\n            <button [disabled]=\\\"processing\\\" type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteBlog()\\\">Yes</button>\\n            <!-- No Button -->\\n            <a routerLink=\\\"/blog\\\">\\n              <button [disabled]=\\\"processing\\\" type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-danger\\\">No</button>\\n            </a>\\n          </div>\\n        </div>\\n\\n        <br />\\n\\n        <!-- Panel -->\\n        <div class=\\\"card\\\">\\n          <!-- Panel Heading -->\\n          <div class=\\\"card-header\\\">\\n            <!-- Panel Title -->\\n            <h3 class=\\\"card-title\\\">{{ post.title }}</h3>\\n          </div>\\n\\n          <!-- Panel Body -->\\n          <div class=\\\"card-body\\\">\\n            {{ post.body }}\\n          </div>\\n\\n          <!-- Panel Footer -->\\n          <div class=\\\"card-footer\\\">\\n            <strong>Posted by: </strong> {{ post.createdBy }}\\n            <br />\\n            <strong>Date: </strong> {{ post.createdAt | date:'MMM dd, yyyy' }}\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/blog/delete-blog/delete-blog.component.html\n// module id = ./src/app/components/blog/delete-blog/delete-blog.component.html\n// module chunks = main","module.exports = \"h2 {\\n  padding-top: 2rem;\\n  text-align: right; }\\n\\n::ng-deep .flash-message {\\n  text-align: center; }\\n\\n.messageClass {\\n  text-align: center; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/blog/delete-blog/delete-blog.component.scss\n// module id = ./src/app/components/blog/delete-blog/delete-blog.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { BlogService } from '../../../services/blog.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-delete-blog',\n  templateUrl: './delete-blog.component.html',\n  styleUrls: ['./delete-blog.component.scss']\n})\nexport class DeleteBlogComponent implements OnInit {\n  message;\n  messageClass;\n  foundBlogPost = false;\n  processing = false;\n  post;\n  currentUrl;\n\n  constructor(\n    private blogService: BlogService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  // Function to delete blogs\n  deleteBlog() {\n    this.processing = true; // Disable buttons\n    // Function for DELETE request\n    this.blogService.deleteBlog(this.currentUrl.id).subscribe(data => {\n      // Check if delete request worked\n      if (!data.success) {\n        this.messageClass = 'alert alert-danger'; // Return error bootstrap class\n        this.message = data.message; // Return error message\n      } else {\n        this.messageClass = 'alert alert-success'; // Return bootstrap success class\n        this.message = data.message; // Return success message\n        // After two second timeout, route to blog page\n        setTimeout(() => {\n          this.router.navigate(['/blog']); // Route users to blog page\n        }, 2000);\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.currentUrl = this.activatedRoute.snapshot.params; // Get URL paramaters on page load\n    // Function for GET request to retrieve blog\n    this.blogService.getSingleBlog(this.currentUrl.id).subscribe(data => {\n      // Check if request was successfull\n      if (!data.success) {\n        this.messageClass = 'alert alert-danger'; // Return bootstrap error class\n        this.message = data.message; // Return error message\n      } else {\n        // Create the blog object to use in HTML\n        this.post = {\n          title: data.post.title, // Set title\n          body: data.post.body, // Set body\n          createdBy: data.post.createdBy, // Set created_by field\n          createdAt: data.post.createdAt // Set created_at field\n        };\n        this.foundBlogPost = true; // Displaly blog window\n      }\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/blog/delete-blog/delete-blog.component.ts","module.exports = \"<p>\\n  dashboard works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/dashboard/dashboard.component.html\n// module id = ./src/app/components/dashboard/dashboard.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/dashboard/dashboard.component.scss\n// module id = ./src/app/components/dashboard/dashboard.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/dashboard/dashboard.component.ts","module.exports = \"<div class=\\\"jumbotron\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"display-3\\\">Hola a todos!</h1>\\n      <p>This is a MEAN stack blog application. Mauris ultrices nulla eget ultrices efficitur. Vestibulum tortor dui, fermentum quis rutrum vel, sollicitudin id velit. Vestibulum purus ligula, laoreet nec pretium non, consectetur sit amet libero. Suspendisse nec accumsan tellus. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Nunc mattis, metus id blandit pharetra, velit lectus facilisis ex, eu hendrerit ante mauris vitae risus.</p>\\n      <div class=\\\"buttons\\\" *ngIf=\\\"!loggedIn()\\\">\\n        <a class=\\\"btn bg-dark text-white btn-lg\\\" routerLink=\\\"/register\\\" role=\\\"button\\\">Register</a>\\n        <a class=\\\"btn btn-success btn-lg\\\" routerLink=\\\"/login\\\" role=\\\"button\\\">Log in &raquo;</a>\\n      </div>\\n      <div class=\\\"buttons\\\" *ngIf=\\\"loggedIn()\\\">\\n        <a class=\\\"btn bg-dark text-white btn-lg\\\" routerLink=\\\"/blog\\\" role=\\\"button\\\">Blog</a>\\n      </div>\\n    </div>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/home/home.component.html\n// module id = ./src/app/components/home/home.component.html\n// module chunks = main","module.exports = \".jumbotron {\\n  margin-top: 1rem; }\\n\\n.buttons {\\n  text-align: right; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/home/home.component.scss\n// module id = ./src/app/components/home/home.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(\n    private authService: AuthService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/home/home.component.ts","module.exports = \"<div>\\n  <form [formGroup]=\\\"form\\\" (submit)=\\\"onLogin()\\\">\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-md-4 offset-md-4\\\">\\n              <h2>Log In</h2>\\n              <hr>\\n              <!--\\n              <div class=\\\"row show-hide-message\\\">-->\\n                      <div [ngClass]=\\\"messageClass\\\">\\n                        {{ message }}\\n                      </div><!--\\n              </div>-->\\n                    \\n          </div>\\n      </div>\\n\\n      <!-- Username -->\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-md-4 field-label\\\">\\n              <label>Username</label>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n                  <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n                      <input type=\\\"text\\\" name=\\\"username\\\" class=\\\"form-control\\\"\\n                             formControlName=\\\"username\\\" />\\n                  </div>\\n              </div>\\n          </div>\\n          <div class=\\\"col-md-4\\\" [ngClass]=\\\"{'error': (form.controls.username.errors && form.controls.username.dirty), 'success': form.controls.username.valid && form.controls.username.dirty}\\\">\\n              <div *ngIf=\\\"!!form.controls.username.errors?.required && !!form.controls.username.dirty\\\">\\n                  {{ alert }}\\n              </div>\\n          </div>\\n      </div>\\n      \\n      <!-- Password -->\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-md-4 field-label\\\">\\n              <label>Password</label>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group has-danger\\\">\\n                  <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n                      <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\"\\n                             formControlName=\\\"password\\\" />\\n                  </div>\\n              </div>\\n          </div>\\n          <div class=\\\"col-md-4\\\" [ngClass]=\\\"{'error': (form.controls.password.errors && form.controls.password.dirty), 'success': form.controls.password.valid && form.controls.password.dirty}\\\">\\n              <div *ngIf=\\\"!!form.controls.password.errors?.required && !!form.controls.password.dirty\\\">\\n                      {{ alert }}\\n              </div>\\n          </div>\\n      </div>\\n      \\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-md-4\\\"></div>\\n          <div class=\\\"col-md-4\\\">\\n              <button type=\\\"submit\\\" [disabled]=\\\"!form.valid || processing\\\" class=\\\"btn btn-success btn-block\\\">Enter</button>\\n          </div>\\n      </div>\\n\\n  </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/login/login.component.html\n// module id = ./src/app/components/login/login.component.html\n// module chunks = main","module.exports = \"h2 {\\n  padding-top: 2rem;\\n  text-align: right; }\\n\\n.field-label {\\n  padding-top: .5rem;\\n  text-align: right; }\\n\\n.error {\\n  padding-top: .5rem;\\n  color: red;\\n  font-style: italic; }\\n\\n.success {\\n  padding-top: .5rem;\\n  color: #28a745;\\n  font-style: italic; }\\n\\n.alert {\\n  width: 100%;\\n  text-align: center; }\\n\\n.form-control {\\n  background-color: whitesmoke;\\n  border: 2px dashed darkgrey; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/login/login.component.scss\n// module id = ./src/app/components/login/login.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { AuthGuard } from '../../services/auth-guard.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  form: FormGroup;\n  alert: string;\n  message: string;\n  messageClass: string;\n  processing: boolean = false;\n  previousUrl: string; // After being re-directed here\n\n  constructor(\n                private formBuilder: FormBuilder,\n                public authService: AuthService,\n                private router: Router,\n                private authGuard: AuthGuard\n              ) {\n    this.createForm();\n    this.alert = 'This field is required';\n   }\n\n   ngOnInit() {\n     if (this.authGuard.redirectUrl) {\n       // if the property exists then we know that the user was re-directed here.\n       this.previousUrl = this.authGuard.redirectUrl;\n       this.authGuard.redirectUrl = undefined; // Clear the state once previousUrl is saved\n       this.messageClass = 'alert alert-danger';\n       this.message = 'You must be logged in to view that page.';\n     }\n   }\n\n  createForm() {\n    this.form = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  disableForm() {\n    this.form.controls['username'].disable();\n    this.form.controls['password'].disable();\n  }\n\n  enableForm() {\n    this.form.controls['username'].enable();\n    this.form.controls['password'].enable();\n  }\n\n  onLogin() {\n    this.processing = true; // Used to disable submit button while is being processed\n    this.disableForm(); // Disable form while being processed\n\n    const user = {\n      username: this.form.get('username').value, // Username input field\n      password: this.form.get('password').value // Password input field\n    };\n\n    // Function to send login data to API\n    this.authService.login(user).subscribe(data => {\n      if (!data.success) {\n        this.messageClass = 'alert alert-danger'; // Set bootstrap error class\n        this.message = data.message; // Set error message\n        this.processing = false; // Enable submit button\n        this.enableForm(); // Enable form for editting\n        } else {\n            this.messageClass = 'alert alert-success'; // Set bootstrap success class\n            this.message = data.message; // Set success message\n\n            // authService function to store user's token in client local storage\n            this.authService.storeUserData(data.token, data.user);\n\n            setTimeout(() => {\n\n              if (this.previousUrl) {\n                // If user was re-directed from an unauthorised page then direct back\n                // after successful login...\n                this.router.navigate([this.previousUrl]);\n              } else {\n                // Else direct to default (dashboard).\n                this.router.navigate(['/dashboard']);\n              }\n            }, 2000);\n          }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/login/login.component.ts","module.exports = \"<nav class=\\\"navbar navbar-expand-sm navbar-dark bg-dark\\\">\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#nav-content\\\" aria-controls=\\\"nav-content\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    \\n    <!-- Brand -->\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">MEAN Stack Blog</a>\\n    \\n    <!-- Links -->\\n    <div class=\\\"collapse navbar-collapse justify-content-end\\\" id=\\\"nav-content\\\">   \\n        <ul class=\\\"navbar-nav\\\">\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"loggedIn()\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/dashboard\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">Dashboard</a>\\n            </li>\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"loggedIn()\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/profile\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">Profile</a>\\n            </li>\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"loggedIn()\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/blog\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">Blog</a>\\n            </li>\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"!loggedIn()\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">Log in</a>\\n            </li>\\n            <li class=\\\"nav-item logout\\\" *ngIf=\\\"loggedIn()\\\"> <!-- TODO -->\\n                <a class=\\\"nav-link\\\" (click)=\\\"logoutClick()\\\">Log out</a>\\n            </li>\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"!loggedIn()\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/register\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">Register</a>\\n            </li>\\n        </ul>\\n    </div>\\n</nav>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/navbar/navbar.component.html\n// module id = ./src/app/components/navbar/navbar.component.html\n// module chunks = main","module.exports = \".nav-link {\\n  margin: 0 10px; }\\n\\n.logout {\\n  cursor: pointer; }\\n\\n::ng-deep .alert-info {\\n  margin-top: 15px;\\n  height: 50px;\\n  padding-top: 15px;\\n  padding-bottom: 37.5px;\\n  text-align: center; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/navbar/navbar.component.scss\n// module id = ./src/app/components/navbar/navbar.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService,\n    private router: Router,\n    private flash: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n\n  logoutClick() {\n    this.authService.logout();\n    this.router.navigate(['/']);\n    this.flash.show('You are now logged out', {cssClass: 'alert-info'});\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/navbar/navbar.component.ts","module.exports = \"<div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-8 offset-md-2\\\">\\n            <h2>Profile</h2>\\n            <hr>\\n            <div class=\\\"col-md-6\\\">\\n                <ul class=\\\"list-group\\\">\\n                    <li class=\\\"list-group-item\\\"><strong>Username:</strong> {{ username }} </li>\\n                    <li class=\\\"list-group-item\\\"><strong>Email:</strong> {{ email }}</li>\\n                </ul>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/profile/profile.component.html\n// module id = ./src/app/components/profile/profile.component.html\n// module chunks = main","module.exports = \"h2 {\\n  padding-top: 2rem;\\n  text-align: right; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/profile/profile.component.scss\n// module id = ./src/app/components/profile/profile.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  username: string;\n  email: string;\n\n  constructor(\n    private authService: AuthService\n  ) { }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe(profile => {\n      this.username = profile.user.username;\n      this.email = profile.user.email;\n    }); // When page loads it's going to run to get profile.\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/profile/profile.component.ts","module.exports = \"<div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-8 offset-md-2\\\">\\n            <h2>Public Profile</h2>\\n            <hr>\\n            <div class=\\\"col-md-6\\\">\\n                <ul class=\\\"list-group\\\">\\n                    <li class=\\\"list-group-item\\\"><strong>Username:</strong> {{ username }} </li>\\n                    <li class=\\\"list-group-item\\\"><strong>Email:</strong> {{ email }}</li>\\n                </ul>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/public-profile/public-profile.component.html\n// module id = ./src/app/components/public-profile/public-profile.component.html\n// module chunks = main","module.exports = \"h2 {\\n  padding-top: 2rem;\\n  text-align: right; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/public-profile/public-profile.component.scss\n// module id = ./src/app/components/public-profile/public-profile.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-public-profile',\n  templateUrl: './public-profile.component.html',\n  styleUrls: ['./public-profile.component.scss']\n})\nexport class PublicProfileComponent implements OnInit {\n\n  currentUrl;\n  username;\n  email;\n  foundProfile = false;\n  messageClass;\n  message;\n\n  constructor(\n    private authService: AuthService,\n    private activatedRoute: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.currentUrl = this.activatedRoute.snapshot.params; // Get URL parameters on page load in order to request correct profile data.\n    // Service to get the public profile data...\n    this.authService.getPublicProfile(this.currentUrl.username).subscribe(data => {\n      // Check if user was found in database\n      if (!data.success) {\n        this.messageClass = 'alert alert-danger'; // Return bootstrap error class\n        this.message = data.message; // Return api error message\n      } else {\n        this.username = data.user.username; // Bind the username for use in template\n        this.email = data.user.email; // Bind the email for use in template\n        this.foundProfile = true;\n      }\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/public-profile/public-profile.component.ts","module.exports = \"<div>\\n    <form [formGroup]=\\\"form\\\" (submit)=\\\"onSubmit()\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4 offset-md-4\\\">\\n                <h2>Register</h2>\\n                <hr>\\n                <!--\\n                <div class=\\\"row show-hide-message\\\">-->\\n                        <div [ngClass]=\\\"messageClass\\\">\\n                          {{ message }}\\n                        </div><!--\\n                </div>-->\\n                      \\n            </div>\\n        </div>\\n\\n        <!-- Username -->\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4 field-label\\\">\\n                <label>Username</label>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n                        <input type=\\\"text\\\" name=\\\"username\\\" class=\\\"form-control\\\"\\n                               formControlName=\\\"username\\\"\\n                               (focus)=\\\"usernameMessage=null\\\" (blur)=\\\"checkUsername()\\\" />\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"{'error': (form.controls['username'].errors && form.controls['username'].dirty) || (!usernameValid && form.controls['username'].dirty), 'success': !form.controls['username'].errors && usernameValid}\\\">\\n                <div *ngIf=\\\"form.controls['username'].errors?.required && form.controls['username'].dirty\\\">\\n                    {{ alert }}\\n                </div>\\n                <div *ngIf=\\\"(form.controls['username'].errors?.minlength || form.controls['username'].errors?.maxlength) && form.controls['username'].dirty\\\">\\n                    Minimum length: 3, Maximum length: 15 \\n                </div>\\n                <div *ngIf=\\\"form.controls['username'].errors?.validateUsername && form.controls['username'].dirty\\\">\\n                    Username must not have any special characters\\n                </div>\\n                <div *ngIf=\\\"usernameMessage && usernameValid\\\">\\n                        <i class=\\\"material-icons\\\">thumb_up</i>\\n                    </div>\\n                <div *ngIf=\\\"usernameMessage && !usernameValid\\\">\\n                    {{ usernameMessage }}\\n                </div>\\n            </div>\\n        </div>\\n\\n        <!-- Email -->\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4 field-label\\\">\\n                <label>E-Mail Address</label>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n                        <input type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\"\\n                               formControlName=\\\"email\\\"\\n                               (focus)=\\\"emailMessage= null\\\" (blur)=\\\"checkEmail()\\\" />\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"{'error': (form.controls.email.errors && form.controls.email.dirty) || (!emailValid && form.controls.email.dirty), 'success': !form.controls['email'].errors && emailValid}\\\">\\n                <div *ngIf=\\\"form.controls['email'].errors?.required && form.controls['email'].dirty\\\">\\n                        {{ alert }}\\n                </div>\\n                <div *ngIf=\\\"(form.controls['email'].errors?.minlength || form.controls['email'].errors?.maxlength) && form.controls['email'].dirty\\\">\\n                    Minimum length: 5, Maximum length: 30\\n                </div>\\n                <div *ngIf=\\\"form.controls['email'].errors?.validateEmail && form.controls['email'].dirty\\\">\\n                    Must be a valid email\\n                </div>\\n                <div *ngIf=\\\"emailMessage && emailValid\\\">\\n                    <i class=\\\"material-icons\\\">thumb_up</i>\\n                </div>\\n                <div *ngIf=\\\"emailMessage && !emailValid\\\">\\n                    {{ emailMessage }}\\n                </div>\\n            </div>\\n        </div>\\n        \\n        <!-- Password -->\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4 field-label\\\">\\n                <label>Password</label>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n                <div class=\\\"form-group has-danger\\\">\\n                    <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n                        <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\"\\n                               formControlName=\\\"password\\\" />\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"{'error': (form.controls['password'].errors && form.controls['password'].dirty), 'success': !form.controls['password'].errors}\\\">\\n                <div *ngIf=\\\"form.controls['password'].errors?.required && form.controls['password'].dirty\\\">\\n                        {{ alert }}\\n                </div>\\n                <div *ngIf=\\\"(form.controls['password'].errors?.minlength || form.controls['password'].errors?.maxlength) && form.controls['password'].dirty\\\">\\n                    Minimum length: 8, Maximum length: 35 \\n                </div>\\n                <div *ngIf=\\\"form.controls['password'].errors?.validatePassword && form.controls['password'].dirty\\\">\\n                    Must have at least one uppercase, lowercase, special character, and number\\n                </div>\\n            </div>\\n        </div>\\n        <!-- Confirm Password -->\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4 field-label\\\">\\n                <label>Confirm Password</label>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n                        <input type=\\\"password\\\" name=\\\"confirm\\\" class=\\\"form-control\\\"\\n                               formControlName=\\\"confirm\\\" />\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"{'error': (form.controls.confirm.errors && form.controls.confirm.dirty) || (form.errors?.matchingPasswords && form.controls['confirm'].dirty), 'success': !form.controls['confirm'].errors && !form.errors?.matchingPasswords}\\\">\\n                <div *ngIf=\\\"form.controls['confirm'].errors?.required && form.controls['confirm'].dirty\\\">\\n                        {{ alert }}\\n                </div>\\n                <div *ngIf=\\\"!!form.errors?.matchingPasswords && form.controls['confirm'].dirty && form.controls['password'].dirty\\\">\\n                    Passwords do not match\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4\\\"></div>\\n            <div class=\\\"col-md-4\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"!form.valid || processing || !emailValid || !usernameValid\\\" class=\\\"btn btn-success btn-block\\\">Register</button>\\n            </div>\\n        </div>\\n    </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/register/register.component.html\n// module id = ./src/app/components/register/register.component.html\n// module chunks = main","module.exports = \"h2 {\\n  padding-top: 2rem;\\n  text-align: right; }\\n\\n.field-label {\\n  padding-top: .5rem;\\n  text-align: right; }\\n\\n.error {\\n  padding-top: .5rem;\\n  color: red;\\n  font-style: italic; }\\n\\n.success {\\n  padding-top: .5rem;\\n  color: #28a745;\\n  font-style: italic; }\\n\\n.alert {\\n  width: 100%;\\n  text-align: center; }\\n\\n.form-control {\\n  background-color: whitesmoke;\\n  border: 2px dashed darkgrey; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/register/register.component.scss\n// module id = ./src/app/components/register/register.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n// import { setTimeout } from 'timers'; Angular added with but then it wouldn't compile...\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  form: FormGroup;\n  alert: string;\n  email: string;\n  message: string;\n  messageClass: string;\n  processing: boolean = false;\n  emailValid: boolean;\n  emailMessage: string;\n  usernameValid: boolean;\n  usernameMessage: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.createForm();\n    this.alert = 'This field is required';\n   }\n\n  ngOnInit() {\n  }\n\n  createForm() {\n    this.form = this.formBuilder.group({\n      email: [null, Validators.compose([\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(30),\n        this.validateEmail\n      ])],\n      username: [null, Validators.compose([\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(15),\n        this.validateUsername // RegEx\n      ])],\n      password: [null, Validators.compose([\n        Validators.required,\n        Validators.minLength(8),\n        Validators.maxLength(35),\n        this.validatePassword // RegEx\n      ])],\n      confirm: [null, Validators.required]\n    }, { validator: this.matchingPasswords('password', 'confirm') }); // custom validator for matching passwords\n  }\n\n    disableForm() {\n      this.form.controls['email'].disable();\n      this.form.controls['username'].disable();\n      this.form.controls['password'].disable();\n      this.form.controls['confirm'].disable();\n    }\n\n    enableForm() {\n      this.form.controls['email'].enable();\n      this.form.controls['username'].enable();\n      this.form.controls['password'].enable();\n      this.form.controls['confirm'].enable();\n  }\n\n  validateEmail(controls) {\n    const regExp = new\n    RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return {'validateEmail': true};\n    }\n  }\n\n  validateUsername(controls) {\n    const regExp = new RegExp(/^[a-zA-Z0-9]+$/);\n\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return {'validateUsername': true};\n    }\n  }\n\n  validatePassword(controls) {\n    const regExp = new RegExp(/^(?=.*?[a-z])(?=.*?[A-Z])(?=.*?[\\d])(?=.*?[\\W]).*$/);\n    if (regExp.test(controls.value)) {\n      return null;\n    } else {\n      return {'validatePassword': true };\n    }\n  }\n\n  matchingPasswords(password, confirm) {\n    return (group: FormGroup) => {\n\n      if (group.controls[password].value === group.controls[confirm].value) {\n        return null; // Return as a match\n      } else {\n        return { 'matchingPasswords': true }; // Return as error: do not match\n      }\n    };\n}\n\n  onSubmit() {\n    this.processing = true; // Used to notify HTML that form is in processing, so that it can be disabled\n    this.disableForm();\n    const user = {\n      email: this.form.get('email').value,\n      username: this.form.get('username').value,\n      password: this.form.get('password').value\n    };\n    this.authService.registerUser(user).subscribe(data => {\n      console.log(data);\n      if (!data.success) {\n        this.messageClass = 'alert alert-danger'; // Set a Bootstrap error class\n        this.message = data.message; // Server error response\n        this.processing = false; // Re-enable submit button\n        this.enableForm();\n      } else {\n        this.messageClass = 'alert alert-success'; // Set a Bootstrap success class\n        this.message = data.message; // Server success message\n        setTimeout(() => {\n          this.router.navigate(['/login']);\n        }, 2000);\n        }\n    });\n  }\n\n  // Function to check if username is still available (activated by ng-Blur)\n  checkEmail() {\n    const email = this.form.get('email').value;\n    // Function from authentication file to check if e-mail is taken\n    this.authService.checkEmail(email).subscribe(data => {\n\n      if (!data.success && data.message) {\n        this.emailValid = false; // Return email as invalid in ng-If div\n        this.emailMessage = data.message; // Return error message\n        } else if (!this.form.controls.email.errors) {\n          this.emailValid = true; // Return email as valid in ng-If div\n          this.emailMessage = data.message; // Return success message\n          } else {\n            this.emailMessage = null;\n            }\n    });\n  }\n\n  // Function to check if username is still available (activated by ng-Blur)\n  checkUsername() {\n    const username = this.form.get('username').value;\n    // Function from authentication file to check if username is taken\n    this.authService.checkUsername(username).subscribe(data => {\n\n      if (!data.success) {\n        this.usernameValid = false; // Return username as invalid in ng-If div\n        this.usernameMessage = data.message; // ng-If invalid message\n        } else if (!this.form.controls.username.errors) {\n          this.usernameValid = true; // Return username as valid in ng-If div\n          this.usernameMessage = data.message; // ng-If success message\n          } else {\n            this.usernameMessage = null;\n            }\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/register/register.component.ts","import { Routes } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { PublicProfileComponent } from './components/public-profile/public-profile.component';\nimport { BlogComponent } from './components/blog/blog.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { BlogEditComponent } from './components/blog/blog-edit/blog-edit.component';\nimport { DeleteBlogComponent } from './components/blog/delete-blog/delete-blog.component';\n\nimport { AuthGuard } from './services/auth-guard.service';\nimport { NotAuthGuard } from './services/not-auth-guard.service';\n\nexport const routes: Routes = [\n\n    {\n        path: '',\n        component: HomeComponent\n    },\n    {\n        path: 'dashboard',\n        component: DashboardComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'profile',\n        component: ProfileComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'user/:username',\n        component: PublicProfileComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'blog',\n        component: BlogComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'edit-blog/:id',\n        component: BlogEditComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'delete-blog/:id',\n        component: DeleteBlogComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'register',\n        component: RegisterComponent,\n        canActivate: [NotAuthGuard]\n    },\n    {\n        path: 'login',\n        component: LoginComponent,\n        canActivate: [NotAuthGuard]\n    },\n    {\n        path: '**',\n        component: HomeComponent\n    }\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/routes.ts","import { Injectable } from '@angular/core';\nimport { CanActivate,\n         Router,\n         ActivatedRouteSnapshot, // Snapshots for directing user to the requested page once logged in\n         RouterStateSnapshot // (instead of to the dashboard).\n         // To be placed directly into the parameters of the function instead of the constructor.\n        } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  redirectUrl: string;\n  // The user-requested URL that the user will be re-directed to after attempting to access\n  // a page directly. Stored here.\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n\n  canActivate(\n    router: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ) {\n\n    if (this.authService.loggedIn()) {\n      return true;\n    } else {\n      this.redirectUrl = state.url;\n      // Snapshot taken here of where user is wanting to go before re-directing to login page\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/auth-guard.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { tokenNotExpired } from 'angular2-jwt';\n\n\n@Injectable()\nexport class AuthService {\n\n  domain: string = '';\n  user: string;\n  authToken: string;\n  options: object; // used to store headers\n\n  constructor(\n    private http: Http,\n  ) { }\n\n   // Function to be used any time we need headers (whenever user needs to be authorized before they access something)\n   createAuthenticationHeaders() {\n      this.loadToken();\n\n      this.options = new RequestOptions({\n          headers: new Headers({\n            'Content-Type': 'application/json',\n            'authorization': this.authToken\n          })\n      });\n   }\n\n   // Function used to grab token from Local Storage (browser).\n   loadToken() {\n      this.authToken = localStorage.getItem('token');\n   }\n\n  registerUser(user) {\n    return this.http.post(this.domain + 'authentication/register', user).map(res => res.json());\n  }\n\n  checkUsername(username) {\n    return this.http.get(this.domain + 'authentication/checkUsername/' + username).map(res => res.json());\n  }\n\n  checkEmail(email) {\n    return this.http.get(this.domain + 'authentication/checkEmail/' + email).map(res => res.json());\n  }\n\n  // Function to log in user (taking the user object from the back-end)\n  login(user) {\n    return this.http.post(this.domain + 'authentication/login', user).map(res => res.json());\n}\n\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n\n  loggedIn() {\n    return tokenNotExpired();\n  }\n\n  // Function to store user's username and token in client local storage (the browser.) Local storage details can be seen on Chrome by clicking F12 and then Storage.\n  storeUserData(token, user) {\n    localStorage.setItem('token', token);\n    // need to stringify user object before storage (localStorage only store strings)...\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token; // Assign token to be used elsewhere\n    this.user = user; // Set user to be used elsewhere\n  }\n\n  // Function to intercept local storage on the browser to get profile info. Needs to be done in an ideal way to ensure the token isn't sent every time. We can use headers for that.\n  getProfile() {\n    this.createAuthenticationHeaders(); // Create headers before sending to API\n    return this.http.get(this.domain + 'authentication/profile', this.options).map(res => res.json());\n  }\n\n  // Function to get public profile data\n  getPublicProfile(username) {\n    this.createAuthenticationHeaders();\n    return this.http.get(this.domain + 'authentication/publicProfile/' + username, this.options).map(res => res.json());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/auth.service.ts","import { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { Http, Headers, RequestOptions } from '@angular/http';\n\n\n@Injectable()\nexport class BlogService {\n\n  options: object; // used to store headers\n  domain = this.authService.domain; // localhost\n\n  constructor(\n    private authService: AuthService,\n    private http: Http\n  ) { }\n\n   // Function to be used any time we need headers\n   // (whenever user needs to be authorized before they access something)\n   createAuthenticationHeaders() {\n    this.authService.loadToken(); // Get token so it can be attached to headers\n\n    this.options = new RequestOptions({\n            headers: new Headers({\n              'Content-Type': 'application/json',\n              'authorization': this.authService.authToken\n            })\n        });\n    }\n\n  newBlog(blog) {\n    this.createAuthenticationHeaders();\n    return this.http.post(this.domain + 'blogs/newBlog', blog, this.options).map(res => res.json());\n    // So when making a post request the newBlog api is expecting the\n    // blog object (from blog component)\n    // along with the options for the header.\n  }\n\n  getAllBlogs() {\n    this.createAuthenticationHeaders();\n    return this.http.get(this.domain + 'blogs/allBlogs', this.options).map(res => res.json());\n  }\n\n  getSingleBlog(id) {\n    this.createAuthenticationHeaders();\n    return this.http.get(this.domain + 'blogs/singleBlog/' + id, this.options).map(res => res.json());\n  }\n\n  editBlog(post) {\n    this.createAuthenticationHeaders();\n    return this.http.put(this.domain + 'blogs/updateBlog/', post, this.options).map(res => res.json());\n  }\n\n  deleteBlog(id) {\n    this.createAuthenticationHeaders();\n    return this.http.delete(this.domain + 'blogs/deleteBlog/' + id, this.options).map(res => res.json());\n  }\n\n  likeBlog(id) {\n    const blogData = { id: id };\n    return this.http.put(this.domain + 'blogs/likeBlog/', blogData, this.options).map(res => res.json());\n  }\n\n  dislikeBlog(id) {\n    const blogData = { id: id };\n    return this.http.put(this.domain + 'blogs/dislikeBlog/', blogData, this.options).map(res => res.json());\n  }\n\n\n  postComment(id, comment) {\n    this.createAuthenticationHeaders(); // Create headers\n    // Create blog post data to pass to backend\n    const blogData = {\n      id: id,\n      comment: comment\n    };\n\n    return this.http.post(this.domain + 'blogs/comment', blogData, this.options).map(res => res.json());\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/blog.service.ts","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class NotAuthGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n\n  canActivate() {\n\n    if (this.authService.loggedIn()) {\n      this.router.navigate(['/']);\n    } else {\n      return true;\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/not-auth-guard.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}